{"ast":null,"code":"var _jsxFileName = \"/home/prashant/Desktop/Prashant/suicidal_content_detection/Frontend/src/Components/DocumentUpload.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { FileText, CheckCircle, AlertCircle, Send, Loader } from 'lucide-react';\n// import './DocumentUpload.css';\n\n// function DocumentUpload() {\n//   const [uploading, setUploading] = useState(false);\n//   const [uploadStatus, setUploadStatus] = useState(null);\n//   const [text, setText] = useState('');\n//   const [processedData, setProcessedData] = useState(null);\n\n//   const handleSubmit = async () => {\n//     if (!text) {\n//       setUploadStatus('error');\n//       return;\n//     }\n\n//     setUploading(true);\n//     setProcessedData(null);\n\n//     const formData = new FormData();\n//     formData.append('text', text);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/detect', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(errorData.detail || 'Detection failed');\n//       }\n\n//       const result = await response.json();\n//       console.log('Detection result:', result);\n//       setProcessedData(result);\n//       setUploadStatus('success');\n//       setText('');\n//     } catch (error) {\n//       console.error('Error detecting:', error);\n//       setUploadStatus('error');\n//     } finally {\n//       setUploading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"document-upload\">\n//       <h2 className=\"main-title\">\n//         <FileText className=\"icon\" />\n//         Suicidal Content Detection\n//       </h2>\n\n//       <div className=\"textarea-container\">\n//         <textarea\n//           value={text}\n//           onChange={(e) => setText(e.target.value)}\n//           placeholder=\"Enter your text here...\"\n//           rows={8}\n//           className=\"text-input\"\n//         />\n//       </div>\n\n//       <button\n//         onClick={handleSubmit}\n//         disabled={uploading}\n//         className={`submit-button ${uploading ? 'uploading' : ''}`}\n//       >\n//         {uploading ? (\n//           <>\n//             <Loader className=\"icon animate-spin\" />\n//             Detecting...\n//           </>\n//         ) : (\n//           <>\n//             <Send className=\"icon\" />\n//             Detect\n//           </>\n//         )}\n//       </button>\n\n//       {uploadStatus === 'success' && (\n//         <div className=\"status-message success\">\n//           <CheckCircle className=\"icon\" />\n//           Detection successful!\n//         </div>\n//       )}\n//       {uploadStatus === 'error' && (\n//         <div className=\"status-message error\">\n//           <AlertCircle className=\"icon\" />\n//           Error detecting. Please try again.\n//         </div>\n//       )}\n\n//       {processedData && (\n//         <div className=\"results-section\">\n//           <h3 className=\"section-title\">\n//             <FileText className=\"icon\" />\n//             Detection Results\n//           </h3>\n//           <div className=\"result-grid\">\n//             <div className=\"result-item\">\n//               <strong>Predicted Class:</strong> {processedData.predicted_class}\n//             </div>\n//             <div className=\"result-item\">\n//               <strong>Probabilities:</strong>\n//               <ul>\n//                 <li>Suicidal: {(processedData.probabilities[0] * 100).toFixed(2)}%</li>\n//                 <li>Non-Suicidal: {(processedData.probabilities[1] * 100).toFixed(2)}%</li>\n//               </ul>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default DocumentUpload;\n\nimport React, { useState } from 'react';\nimport { FileText, CheckCircle, AlertCircle, Send, Loader, Eye, X } from 'lucide-react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n// import { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\n// import { Button } from \"@/components/ui/button\";\nimport './DocumentUpload.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = ({\n  children,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  ...props,\n  className: `button ${props.className || ''}`,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 130,\n  columnNumber: 5\n}, this);\n_c = Button;\nconst Dialog = ({\n  open,\n  onOpenChange,\n  children\n}) => open ? /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"dialog-overlay\",\n  onClick: () => onOpenChange(false),\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dialog-content\",\n    onClick: e => e.stopPropagation(),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 137,\n  columnNumber: 7\n}, this) : null;\n_c2 = Dialog;\nconst DialogContent = ({\n  children\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"dialog-body\",\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 145,\n  columnNumber: 43\n}, this);\n_c3 = DialogContent;\nconst DialogHeader = ({\n  children\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"dialog-header\",\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 146,\n  columnNumber: 42\n}, this);\n_c4 = DialogHeader;\nconst DialogTitle = ({\n  children\n}) => /*#__PURE__*/_jsxDEV(\"h2\", {\n  className: \"dialog-title\",\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 147,\n  columnNumber: 41\n}, this);\n_c5 = DialogTitle;\nfunction DocumentUpload() {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [text, setText] = useState('');\n  const [processedData, setProcessedData] = useState(null);\n  const [showInput, setShowInput] = useState(false);\n  const handleSubmit = async () => {\n    if (!text) {\n      setUploadStatus('error');\n      return;\n    }\n    setUploading(true);\n    setProcessedData(null);\n    const formData = new FormData();\n    formData.append('text', text);\n    try {\n      const response = await fetch('http://127.0.0.1:8000/detect', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Detection failed');\n      }\n      const result = await response.json();\n      console.log('Detection result:', result);\n      setProcessedData(result);\n      setUploadStatus('success');\n    } catch (error) {\n      console.error('Error detecting:', error);\n      setUploadStatus('error');\n    } finally {\n      setUploading(false);\n    }\n  };\n  const graphData = processedData ? [{\n    name: 'Suicidal',\n    probability: processedData.probabilities[0]\n  }, {\n    name: 'Non-Suicidal',\n    probability: processedData.probabilities[1]\n  }] : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"document-upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"main-title\",\n      children: [/*#__PURE__*/_jsxDEV(FileText, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), \"Suicidal Content Detection\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"textarea-container\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: text,\n        onChange: e => setText(e.target.value),\n        placeholder: \"Enter your text here...\",\n        rows: 8,\n        className: \"text-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        disabled: uploading,\n        className: `submit-button ${uploading ? 'uploading' : ''}`,\n        children: uploading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Loader, {\n            className: \"icon animate-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), \"Detecting...\"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Send, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), \"Detect\"]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setShowInput(true),\n        className: \"show-input-button\",\n        children: [/*#__PURE__*/_jsxDEV(Eye, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), \"Show Input\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), uploadStatus === 'success' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message success\",\n      children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), \"Detection successful!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 9\n    }, this), uploadStatus === 'error' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-message error\",\n      children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), \"Error detecting. Please try again.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this), processedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(FileText, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), \"Detection Results\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-grid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"result-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Predicted Class:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), \" \", processedData.predicted_class]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"graph-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Probability Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: graphData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n              domain: [0, 1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"probability\",\n              fill: \"#8884d8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showInput,\n      onOpenChange: setShowInput,\n      children: /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogHeader, {\n          children: /*#__PURE__*/_jsxDEV(DialogTitle, {\n            children: \"User Input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-input-display\",\n          children: text || \"No input provided\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowInput(false),\n          className: \"close-button\",\n          children: [/*#__PURE__*/_jsxDEV(X, {\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), \"Close\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n}\n_s(DocumentUpload, \"r7GntsS20YXAPJfpgH0pK0PJwws=\");\n_c6 = DocumentUpload;\nexport default DocumentUpload;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Dialog\");\n$RefreshReg$(_c3, \"DialogContent\");\n$RefreshReg$(_c4, \"DialogHeader\");\n$RefreshReg$(_c5, \"DialogTitle\");\n$RefreshReg$(_c6, \"DocumentUpload\");","map":{"version":3,"names":["React","useState","FileText","CheckCircle","AlertCircle","Send","Loader","Eye","X","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","Button","children","props","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Dialog","open","onOpenChange","onClick","e","stopPropagation","_c2","DialogContent","_c3","DialogHeader","_c4","DialogTitle","_c5","DocumentUpload","_s","uploading","setUploading","uploadStatus","setUploadStatus","text","setText","processedData","setProcessedData","showInput","setShowInput","handleSubmit","formData","FormData","append","response","fetch","method","body","ok","errorData","json","Error","detail","result","console","log","error","graphData","name","probability","probabilities","value","onChange","target","placeholder","rows","disabled","predicted_class","width","height","data","strokeDasharray","dataKey","domain","fill","_c6","$RefreshReg$"],"sources":["/home/prashant/Desktop/Prashant/suicidal_content_detection/Frontend/src/Components/DocumentUpload.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { FileText, CheckCircle, AlertCircle, Send, Loader } from 'lucide-react';\n// import './DocumentUpload.css';\n\n// function DocumentUpload() {\n//   const [uploading, setUploading] = useState(false);\n//   const [uploadStatus, setUploadStatus] = useState(null);\n//   const [text, setText] = useState('');\n//   const [processedData, setProcessedData] = useState(null);\n\n//   const handleSubmit = async () => {\n//     if (!text) {\n//       setUploadStatus('error');\n//       return;\n//     }\n\n//     setUploading(true);\n//     setProcessedData(null);\n\n//     const formData = new FormData();\n//     formData.append('text', text);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/detect', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(errorData.detail || 'Detection failed');\n//       }\n\n//       const result = await response.json();\n//       console.log('Detection result:', result);\n//       setProcessedData(result);\n//       setUploadStatus('success');\n//       setText('');\n//     } catch (error) {\n//       console.error('Error detecting:', error);\n//       setUploadStatus('error');\n//     } finally {\n//       setUploading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"document-upload\">\n//       <h2 className=\"main-title\">\n//         <FileText className=\"icon\" />\n//         Suicidal Content Detection\n//       </h2>\n\n//       <div className=\"textarea-container\">\n//         <textarea\n//           value={text}\n//           onChange={(e) => setText(e.target.value)}\n//           placeholder=\"Enter your text here...\"\n//           rows={8}\n//           className=\"text-input\"\n//         />\n//       </div>\n\n//       <button\n//         onClick={handleSubmit}\n//         disabled={uploading}\n//         className={`submit-button ${uploading ? 'uploading' : ''}`}\n//       >\n//         {uploading ? (\n//           <>\n//             <Loader className=\"icon animate-spin\" />\n//             Detecting...\n//           </>\n//         ) : (\n//           <>\n//             <Send className=\"icon\" />\n//             Detect\n//           </>\n//         )}\n//       </button>\n\n//       {uploadStatus === 'success' && (\n//         <div className=\"status-message success\">\n//           <CheckCircle className=\"icon\" />\n//           Detection successful!\n//         </div>\n//       )}\n//       {uploadStatus === 'error' && (\n//         <div className=\"status-message error\">\n//           <AlertCircle className=\"icon\" />\n//           Error detecting. Please try again.\n//         </div>\n//       )}\n\n//       {processedData && (\n//         <div className=\"results-section\">\n//           <h3 className=\"section-title\">\n//             <FileText className=\"icon\" />\n//             Detection Results\n//           </h3>\n//           <div className=\"result-grid\">\n//             <div className=\"result-item\">\n//               <strong>Predicted Class:</strong> {processedData.predicted_class}\n//             </div>\n//             <div className=\"result-item\">\n//               <strong>Probabilities:</strong>\n//               <ul>\n//                 <li>Suicidal: {(processedData.probabilities[0] * 100).toFixed(2)}%</li>\n//                 <li>Non-Suicidal: {(processedData.probabilities[1] * 100).toFixed(2)}%</li>\n//               </ul>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default DocumentUpload;\n\n\nimport React, { useState } from 'react';\nimport { FileText, CheckCircle, AlertCircle, Send, Loader, Eye, X } from 'lucide-react';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n// import { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\n// import { Button } from \"@/components/ui/button\";\nimport './DocumentUpload.css';\n\nconst Button = ({ children, ...props }) => (\n    <button {...props} className={`button ${props.className || ''}`}>\n      {children}\n    </button>\n  );\n  \n  const Dialog = ({ open, onOpenChange, children }) => (\n    open ? (\n      <div className=\"dialog-overlay\" onClick={() => onOpenChange(false)}>\n        <div className=\"dialog-content\" onClick={e => e.stopPropagation()}>\n          {children}\n        </div>\n      </div>\n    ) : null\n  );\n  \n  const DialogContent = ({ children }) => <div className=\"dialog-body\">{children}</div>;\n  const DialogHeader = ({ children }) => <div className=\"dialog-header\">{children}</div>;\n  const DialogTitle = ({ children }) => <h2 className=\"dialog-title\">{children}</h2>;\n\n\nfunction DocumentUpload() {\n  const [uploading, setUploading] = useState(false);\n  const [uploadStatus, setUploadStatus] = useState(null);\n  const [text, setText] = useState('');\n  const [processedData, setProcessedData] = useState(null);\n  const [showInput, setShowInput] = useState(false);\n\n  const handleSubmit = async () => {\n    if (!text) {\n      setUploadStatus('error');\n      return;\n    }\n\n    setUploading(true);\n    setProcessedData(null);\n\n    const formData = new FormData();\n    formData.append('text', text);\n\n    try {\n      const response = await fetch('http://127.0.0.1:8000/detect', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Detection failed');\n      }\n\n      const result = await response.json();\n      console.log('Detection result:', result);\n      setProcessedData(result);\n      setUploadStatus('success');\n    } catch (error) {\n      console.error('Error detecting:', error);\n      setUploadStatus('error');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const graphData = processedData ? [\n    { name: 'Suicidal', probability: processedData.probabilities[0] },\n    { name: 'Non-Suicidal', probability: processedData.probabilities[1] },\n  ] : [];\n\n  return (\n    <div className=\"document-upload\">\n      <h2 className=\"main-title\">\n        <FileText className=\"icon\" />\n        Suicidal Content Detection\n      </h2>\n\n      <div className=\"textarea-container\">\n        <textarea\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          placeholder=\"Enter your text here...\"\n          rows={8}\n          className=\"text-input\"\n        />\n      </div>\n\n      <div className=\"button-container\">\n        <Button\n          onClick={handleSubmit}\n          disabled={uploading}\n          className={`submit-button ${uploading ? 'uploading' : ''}`}\n        >\n          {uploading ? (\n            <>\n              <Loader className=\"icon animate-spin\" />\n              Detecting...\n            </>\n          ) : (\n            <>\n              <Send className=\"icon\" />\n              Detect\n            </>\n          )}\n        </Button>\n\n        <Button onClick={() => setShowInput(true)} className=\"show-input-button\">\n          <Eye className=\"icon\" />\n          Show Input\n        </Button>\n      </div>\n\n      {uploadStatus === 'success' && (\n        <div className=\"status-message success\">\n          <CheckCircle className=\"icon\" />\n          Detection successful!\n        </div>\n      )}\n      {uploadStatus === 'error' && (\n        <div className=\"status-message error\">\n          <AlertCircle className=\"icon\" />\n          Error detecting. Please try again.\n        </div>\n      )}\n\n      {processedData && (\n        <div className=\"results-section\">\n          <h3 className=\"section-title\">\n            <FileText className=\"icon\" />\n            Detection Results\n          </h3>\n          <div className=\"result-grid\">\n            <div className=\"result-item\">\n              <strong>Predicted Class:</strong> {processedData.predicted_class}\n            </div>\n          </div>\n\n          <div className=\"graph-container\">\n            <h4>Probability Distribution</h4>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={graphData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis domain={[0, 1]} />\n                <Tooltip />\n                <Bar dataKey=\"probability\" fill=\"#8884d8\" />\n              </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n      )}\n\n      <Dialog open={showInput} onOpenChange={setShowInput}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>User Input</DialogTitle>\n          </DialogHeader>\n          <div className=\"user-input-display\">\n            {text || \"No input provided\"}\n          </div>\n          <Button onClick={() => setShowInput(false)} className=\"close-button\">\n            <X className=\"icon\" />\n            Close\n          </Button>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default DocumentUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}