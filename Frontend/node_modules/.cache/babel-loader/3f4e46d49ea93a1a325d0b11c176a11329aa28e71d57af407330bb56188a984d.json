{"ast":null,"code":"// import React, { useState } from 'react';\n// import { FileText, CheckCircle, AlertCircle, Send, Loader } from 'lucide-react';\n// import './DocumentUpload.css';\n\n// function DocumentUpload() {\n//   const [uploading, setUploading] = useState(false);\n//   const [uploadStatus, setUploadStatus] = useState(null);\n//   const [text, setText] = useState('');\n//   const [processedData, setProcessedData] = useState(null);\n\n//   const handleSubmit = async () => {\n//     if (!text) {\n//       setUploadStatus('error');\n//       return;\n//     }\n\n//     setUploading(true);\n//     setProcessedData(null);\n\n//     const formData = new FormData();\n//     formData.append('text', text);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/detect', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(errorData.detail || 'Detection failed');\n//       }\n\n//       const result = await response.json();\n//       console.log('Detection result:', result);\n//       setProcessedData(result);\n//       setUploadStatus('success');\n//       setText('');\n//     } catch (error) {\n//       console.error('Error detecting:', error);\n//       setUploadStatus('error');\n//     } finally {\n//       setUploading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"document-upload\">\n//       <h2 className=\"main-title\">\n//         <FileText className=\"icon\" />\n//         Suicidal Content Detection\n//       </h2>\n\n//       <div className=\"textarea-container\">\n//         <textarea\n//           value={text}\n//           onChange={(e) => setText(e.target.value)}\n//           placeholder=\"Enter your text here...\"\n//           rows={8}\n//           className=\"text-input\"\n//         />\n//       </div>\n\n//       <button\n//         onClick={handleSubmit}\n//         disabled={uploading}\n//         className={`submit-button ${uploading ? 'uploading' : ''}`}\n//       >\n//         {uploading ? (\n//           <>\n//             <Loader className=\"icon animate-spin\" />\n//             Detecting...\n//           </>\n//         ) : (\n//           <>\n//             <Send className=\"icon\" />\n//             Detect\n//           </>\n//         )}\n//       </button>\n\n//       {uploadStatus === 'success' && (\n//         <div className=\"status-message success\">\n//           <CheckCircle className=\"icon\" />\n//           Detection successful!\n//         </div>\n//       )}\n//       {uploadStatus === 'error' && (\n//         <div className=\"status-message error\">\n//           <AlertCircle className=\"icon\" />\n//           Error detecting. Please try again.\n//         </div>\n//       )}\n\n//       {processedData && (\n//         <div className=\"results-section\">\n//           <h3 className=\"section-title\">\n//             <FileText className=\"icon\" />\n//             Detection Results\n//           </h3>\n//           <div className=\"result-grid\">\n//             <div className=\"result-item\">\n//               <strong>Predicted Class:</strong> {processedData.predicted_class}\n//             </div>\n//             <div className=\"result-item\">\n//               <strong>Probabilities:</strong>\n//               <ul>\n//                 <li>Suicidal: {(processedData.probabilities[0] * 100).toFixed(2)}%</li>\n//                 <li>Non-Suicidal: {(processedData.probabilities[1] * 100).toFixed(2)}%</li>\n//               </ul>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default DocumentUpload;","map":{"version":3,"names":[],"sources":["/home/prashant/Desktop/Prashant/suicidal_content_detection/Frontend/src/Components/DocumentUpload.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { FileText, CheckCircle, AlertCircle, Send, Loader } from 'lucide-react';\n// import './DocumentUpload.css';\n\n// function DocumentUpload() {\n//   const [uploading, setUploading] = useState(false);\n//   const [uploadStatus, setUploadStatus] = useState(null);\n//   const [text, setText] = useState('');\n//   const [processedData, setProcessedData] = useState(null);\n\n//   const handleSubmit = async () => {\n//     if (!text) {\n//       setUploadStatus('error');\n//       return;\n//     }\n\n//     setUploading(true);\n//     setProcessedData(null);\n\n//     const formData = new FormData();\n//     formData.append('text', text);\n\n//     try {\n//       const response = await fetch('http://127.0.0.1:8000/detect', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       if (!response.ok) {\n//         const errorData = await response.json();\n//         throw new Error(errorData.detail || 'Detection failed');\n//       }\n\n//       const result = await response.json();\n//       console.log('Detection result:', result);\n//       setProcessedData(result);\n//       setUploadStatus('success');\n//       setText('');\n//     } catch (error) {\n//       console.error('Error detecting:', error);\n//       setUploadStatus('error');\n//     } finally {\n//       setUploading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"document-upload\">\n//       <h2 className=\"main-title\">\n//         <FileText className=\"icon\" />\n//         Suicidal Content Detection\n//       </h2>\n\n//       <div className=\"textarea-container\">\n//         <textarea\n//           value={text}\n//           onChange={(e) => setText(e.target.value)}\n//           placeholder=\"Enter your text here...\"\n//           rows={8}\n//           className=\"text-input\"\n//         />\n//       </div>\n\n//       <button\n//         onClick={handleSubmit}\n//         disabled={uploading}\n//         className={`submit-button ${uploading ? 'uploading' : ''}`}\n//       >\n//         {uploading ? (\n//           <>\n//             <Loader className=\"icon animate-spin\" />\n//             Detecting...\n//           </>\n//         ) : (\n//           <>\n//             <Send className=\"icon\" />\n//             Detect\n//           </>\n//         )}\n//       </button>\n\n//       {uploadStatus === 'success' && (\n//         <div className=\"status-message success\">\n//           <CheckCircle className=\"icon\" />\n//           Detection successful!\n//         </div>\n//       )}\n//       {uploadStatus === 'error' && (\n//         <div className=\"status-message error\">\n//           <AlertCircle className=\"icon\" />\n//           Error detecting. Please try again.\n//         </div>\n//       )}\n\n//       {processedData && (\n//         <div className=\"results-section\">\n//           <h3 className=\"section-title\">\n//             <FileText className=\"icon\" />\n//             Detection Results\n//           </h3>\n//           <div className=\"result-grid\">\n//             <div className=\"result-item\">\n//               <strong>Predicted Class:</strong> {processedData.predicted_class}\n//             </div>\n//             <div className=\"result-item\">\n//               <strong>Probabilities:</strong>\n//               <ul>\n//                 <li>Suicidal: {(processedData.probabilities[0] * 100).toFixed(2)}%</li>\n//                 <li>Non-Suicidal: {(processedData.probabilities[1] * 100).toFixed(2)}%</li>\n//               </ul>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default DocumentUpload;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}