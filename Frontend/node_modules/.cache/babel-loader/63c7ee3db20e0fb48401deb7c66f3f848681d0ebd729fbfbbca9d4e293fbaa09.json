{"ast":null,"code":"var _jsxFileName = \"/home/prashant/Desktop/random/SignLLM-Frontend/src/Components/stick_vid.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport ReactPlayer from 'react-player';\nimport './stick_vid.css';\nimport logo1 from './sbl_logo.png';\nimport logo2 from './lf.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoProcessor = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [videoUrl, setVideoUrl] = useState('');\n  const [processedVideoUrl, setProcessedVideoUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleTextSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n    setVideoUrl('');\n    setProcessedVideoUrl('');\n    const formData = new FormData();\n    formData.append('text', inputText);\n    try {\n      // const response = await fetch('http://localhost:8000/process_text', {\n      const response = await fetch('http://localhost:5000/process_text', {\n        method: 'POST',\n        body: formData\n        //  mode: 'no-cors'\n      });\n      console.log(response);\n      console.log(response.status);\n      // console.log(response.json())\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      // const fullVideoUrl = `http://localhost:8000${data.video_url}`;\n      const fullVideoUrl = `http://localhost:5000${data.video_url}`;\n      setVideoUrl(fullVideoUrl);\n      console.log(\"Received video URL:\", fullVideoUrl);\n    } catch (err) {\n      setError(`Error processing text: ${err.message}`);\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleVideoProcess = async () => {\n    setIsLoading(true);\n    setError('');\n    setProcessedVideoUrl('');\n    const formData = new FormData();\n    formData.append('text', inputText);\n    try {\n      // const response = await fetch('http://localhost:8000/process_video', {\n      const response = await fetch('http://localhost:5000/process_video', {\n        method: 'POST',\n        body: formData\n        // mode: 'no-cors',\n      });\n      console.log(response);\n      console.log(response.status);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      // const fullVideoUrl = `http://localhost:8000${data.video_url}`;\n      const fullVideoUrl = `http://localhost:5000${data.video_url}`;\n      setProcessedVideoUrl(fullVideoUrl);\n      console.log(\"Received video URL:\", fullVideoUrl);\n    } catch (err) {\n      setError(`Error processing video: ${err.message}`);\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  //   try {\n  //     const response = await axios.post('http://localhost:8000/process_video');\n  //     const fullVideoUrl = `http://localhost:8000${response.data.video_url}`;\n  //     setProcessedVideoUrl(fullVideoUrl);\n  //     console.log(\"Received processed video URL:\", fullVideoUrl);\n  //   } catch (err) {\n  //     setError(`Error processing video: ${err.response?.data?.detail || err.message}`);\n  //     console.error(err);\n  //   } finally {\n  //     setIsLoading(false);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video-processor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"logo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo1,\n        alt: \"SBL Logo\",\n        style: {\n          height: '50px',\n          width: '50px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo2,\n        alt: \"LF Logo\",\n        style: {\n          height: '50px',\n          width: '50px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"main-title\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"icon\",\n        children: \"\\uD83C\\uDFA5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), \"Sign LLM\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleTextSubmit,\n      className: \"text-input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"textarea-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          placeholder: \"Enter text to process\",\n          className: \"text-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        className: `submit-button ${isLoading ? 'uploading' : ''}`,\n        children: isLoading ? 'Processing...' : 'Process Text'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"status-message error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this), videoUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon\",\n          children: \"\\uD83D\\uDCFD\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), \"Pose Video\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        url: videoUrl,\n        controls: true,\n        width: \"100%\",\n        height: \"auto\",\n        onError: e => {\n          console.error(\"Video playback error:\", e);\n          setError(`Failed to load video. Please check the URL and ensure the video file exists. Error: ${e.message}`);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVideoProcess,\n        disabled: isLoading,\n        className: `submit-button ${isLoading ? 'uploading' : ''}`,\n        children: isLoading ? 'Processing...' : 'Process Video'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), processedVideoUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"section-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"icon\",\n          children: \"\\uD83C\\uDF9E\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), \"Processed Video\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        url: processedVideoUrl,\n        controls: true,\n        width: \"100%\",\n        height: \"auto\",\n        onError: e => {\n          console.error(\"Processed video playback error:\", e);\n          setError(`Failed to load processed video. Please check the URL and ensure the video file exists. Error: ${e.message}`);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoProcessor, \"9bcuWKPCdaJO+SMOYq0yFFZGsxE=\");\n_c = VideoProcessor;\nexport default VideoProcessor;\n\n// without css but full functionalities\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import ReactPlayer from 'react-player';\n\n// const VideoProcessor = () => {\n//   const [inputText, setInputText] = useState('');\n//   const [videoUrl, setVideoUrl] = useState('');\n//   const [processedVideoUrl, setProcessedVideoUrl] = useState('');\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const handleTextSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n//     setError('');\n//     setVideoUrl('');\n//     setProcessedVideoUrl('');\n\n//     try {\n//       const response = await axios.post('http://localhost:8000/process_text', { text: inputText });\n//       const fullVideoUrl = `http://localhost:8000${response.data.video_url}`;\n//       setVideoUrl(fullVideoUrl);\n//       console.log(\"Received video URL:\", fullVideoUrl);\n//     } catch (err) {\n//       setError(`Error processing text: ${err.response?.data?.detail || err.message}`);\n//       console.error(err);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const handleVideoProcess = async () => {\n//     setIsLoading(true);\n//     setError('');\n//     setProcessedVideoUrl('');\n\n//     try {\n//       const response = await axios.post('http://localhost:8000/process_video');\n//       const fullVideoUrl = `http://localhost:8000${response.data.video_url}`;\n//       setProcessedVideoUrl(fullVideoUrl);\n//       console.log(\"Received processed video URL:\", fullVideoUrl);\n//     } catch (err) {\n//       setError(`Error processing video: ${err.response?.data?.detail || err.message}`);\n//       console.error(err);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mx-auto p-4\">\n//       <form onSubmit={handleTextSubmit} className=\"mb-4\">\n//         <input\n//           type=\"text\"\n//           value={inputText}\n//           onChange={(e) => setInputText(e.target.value)}\n//           placeholder=\"Enter text to process\"\n//           className=\"w-full p-2 border rounded\"\n//         />\n//         <button \n//           type=\"submit\" \n//           disabled={isLoading}\n//           className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n//         >\n//           {isLoading ? 'Processing...' : 'Process Text'}\n//         </button>\n//       </form>\n\n//       {error && <p className=\"text-red-500\">{error}</p>}\n\n//       {videoUrl && (\n//         <div className=\"mt-4\">\n//           <p>Original Video:</p>\n//           <ReactPlayer \n//             url={videoUrl} \n//             controls={true} \n//             width=\"100%\"\n//             height=\"auto\"\n//             onError={(e) => {\n//               console.error(\"Video playback error:\", e);\n//               setError(`Failed to load video. Please check the URL and ensure the video file exists. Error: ${e.message}`);\n//             }}\n//           />\n//           <button \n//             onClick={handleVideoProcess}\n//             disabled={isLoading}\n//             className=\"mt-2 px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600\"\n//           >\n//             {isLoading ? 'Processing...' : 'Process Video'}\n//           </button>\n//         </div>\n//       )}\n\n//       {processedVideoUrl && (\n//         <div className=\"mt-4\">\n//           <p>Processed Video:</p>\n//           <ReactPlayer \n//             url={processedVideoUrl} \n//             controls={true} \n//             width=\"100%\"\n//             height=\"auto\"\n//             onError={(e) => {\n//               console.error(\"Processed video playback error:\", e);\n//               setError(`Failed to load processed video. Please check the URL and ensure the video file exists. Error: ${e.message}`);\n//             }}\n//           />\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default VideoProcessor;\n\n// simple with one functionalities\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import ReactPlayer from 'react-player';\n\n// const VideoProcessor = () => {\n//   const [inputText, setInputText] = useState('');\n//   const [videoUrl, setVideoUrl] = useState('');\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n//     setError('');\n//     setVideoUrl('');\n\n//     try {\n//       const response = await axios.post('http://localhost:8000/process_text', { text: inputText });\n//       const fullVideoUrl = `http://localhost:8000${response.data.video_url}`;\n//       setVideoUrl(fullVideoUrl);\n//       console.log(\"Received video URL:\", fullVideoUrl);\n//     } catch (err) {\n//       setError(`Error processing video: ${err.response?.data?.detail || err.message}`);\n//       console.error(err);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mx-auto p-4\">\n//       <form onSubmit={handleSubmit} className=\"mb-4\">\n//         <input\n//           type=\"text\"\n//           value={inputText}\n//           onChange={(e) => setInputText(e.target.value)}\n//           placeholder=\"Enter text to process\"\n//           className=\"w-full p-2 border rounded\"\n//         />\n//         <button \n//           type=\"submit\" \n//           disabled={isLoading}\n//           className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n//         >\n//           {isLoading ? 'Processing...' : 'Process'}\n//         </button>\n//       </form>\n\n//       {error && <p className=\"text-red-500\">{error}</p>}\n\n//       {videoUrl && (\n//         <div className=\"mt-4\">\n//           <p>Video URL: {videoUrl}</p>\n//           <ReactPlayer \n//             url={videoUrl} \n//             controls={true} \n//             width=\"100%\"\n//             height=\"auto\"\n//             onError={(e) => {\n//               console.error(\"Video playback error:\", e);\n//               setError(`Failed to load video. Please check the URL and ensure the video file exists. Error: ${e.message}`);\n//             }}\n//           />\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default VideoProcessor;\nvar _c;\n$RefreshReg$(_c, \"VideoProcessor\");","map":{"version":3,"names":["React","useState","axios","ReactPlayer","logo1","logo2","jsxDEV","_jsxDEV","VideoProcessor","_s","inputText","setInputText","videoUrl","setVideoUrl","processedVideoUrl","setProcessedVideoUrl","isLoading","setIsLoading","error","setError","handleTextSubmit","e","preventDefault","formData","FormData","append","response","fetch","method","body","console","log","status","ok","Error","data","json","fullVideoUrl","video_url","err","message","handleVideoProcess","className","children","src","alt","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","disabled","url","controls","onError","onClick","_c","$RefreshReg$"],"sources":["/home/prashant/Desktop/random/SignLLM-Frontend/src/Components/stick_vid.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport ReactPlayer from 'react-player';\nimport './stick_vid.css';\nimport logo1 from './sbl_logo.png';\nimport logo2 from './lf.png';\n\nconst VideoProcessor = () => {\n  const [inputText, setInputText] = useState('');\n  const [videoUrl, setVideoUrl] = useState('');\n  const [processedVideoUrl, setProcessedVideoUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleTextSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n    setVideoUrl('');\n    setProcessedVideoUrl('');\n\n    const formData = new FormData();\n    formData.append('text', inputText);\n\n    try {\n      // const response = await fetch('http://localhost:8000/process_text', {\n        const response = await fetch('http://localhost:5000/process_text', {\n        method: 'POST',\n        body: formData,\n        //  mode: 'no-cors'\n      });\n      console.log(response)\n      console.log(response.status)\n      // console.log(response.json())\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      // const fullVideoUrl = `http://localhost:8000${data.video_url}`;\n      const fullVideoUrl = `http://localhost:5000${data.video_url}`;\n      setVideoUrl(fullVideoUrl);\n      console.log(\"Received video URL:\", fullVideoUrl);\n    } catch (err) {\n      setError(`Error processing text: ${err.message}`);\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleVideoProcess = async () => {\n    setIsLoading(true);\n    setError('');\n    setProcessedVideoUrl('');\n\n    const formData = new FormData();\n    formData.append('text', inputText);\n\n    try {\n      // const response = await fetch('http://localhost:8000/process_video', {\n        const response = await fetch('http://localhost:5000/process_video', {\n        method: 'POST',\n        body: formData,\n        // mode: 'no-cors',\n\n      });\n      console.log(response)\n      console.log(response.status)\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      // const fullVideoUrl = `http://localhost:8000${data.video_url}`;\n      const fullVideoUrl = `http://localhost:5000${data.video_url}`;\n      setProcessedVideoUrl(fullVideoUrl);\n      console.log(\"Received video URL:\", fullVideoUrl);\n    } catch (err) {\n      setError(`Error processing video: ${err.message}`);\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  //   try {\n  //     const response = await axios.post('http://localhost:8000/process_video');\n  //     const fullVideoUrl = `http://localhost:8000${response.data.video_url}`;\n  //     setProcessedVideoUrl(fullVideoUrl);\n  //     console.log(\"Received processed video URL:\", fullVideoUrl);\n  //   } catch (err) {\n  //     setError(`Error processing video: ${err.response?.data?.detail || err.message}`);\n  //     console.error(err);\n  //   } finally {\n  //     setIsLoading(false);\n  //   }\n  // };\n\n  return (\n    <div className=\"video-processor\">\n      <div className=\"logo-container\">\n      <img src={logo1} alt=\"SBL Logo\" style={{ height: '50px', width: '50px' }} />\n      <img src={logo2} alt=\"LF Logo\" style={{ height: '50px', width: '50px' }} />\n\n       </div>\n\n      <h1 className=\"main-title\">\n        <span className=\"icon\">🎥</span>\n        Sign LLM\n      </h1>\n      <form onSubmit={handleTextSubmit} className=\"text-input-form\">\n        <div className=\"textarea-container\">\n          <input\n            type=\"text\"\n            value={inputText}\n            onChange={(e) => setInputText(e.target.value)}\n            placeholder=\"Enter text to process\"\n            className=\"text-input\"\n          />\n        </div>\n        <button \n          type=\"submit\" \n          disabled={isLoading}\n          className={`submit-button ${isLoading ? 'uploading' : ''}`}\n        >\n          {isLoading ? 'Processing...' : 'Process Text'}\n        </button>\n      </form>\n\n      {error && <p className=\"status-message error\">{error}</p>}\n\n      {videoUrl && (\n        <div className=\"video-section\">\n          <h2 className=\"section-title\">\n            <span className=\"icon\">📽️</span>\n            Pose Video\n          </h2>\n          <ReactPlayer \n            url={videoUrl} \n            controls={true} \n            width=\"100%\"\n            height=\"auto\"\n            onError={(e) => {\n              console.error(\"Video playback error:\", e);\n              setError(`Failed to load video. Please check the URL and ensure the video file exists. Error: ${e.message}`);\n            }}\n          />\n          <button \n            onClick={handleVideoProcess}\n            disabled={isLoading}\n            className={`submit-button ${isLoading ? 'uploading' : ''}`}\n          >\n            {isLoading ? 'Processing...' : 'Process Video'}\n          </button>\n        </div>\n      )}\n\n      {processedVideoUrl && (\n        <div className=\"video-section\">\n          <h2 className=\"section-title\">\n            <span className=\"icon\">🎞️</span>\n            Processed Video\n          </h2>\n          <ReactPlayer \n            url={processedVideoUrl} \n            controls={true} \n            width=\"100%\"\n            height=\"auto\"\n            onError={(e) => {\n              console.error(\"Processed video playback error:\", e);\n              setError(`Failed to load processed video. Please check the URL and ensure the video file exists. Error: ${e.message}`);\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default VideoProcessor;\n\n\n// without css but full functionalities\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import ReactPlayer from 'react-player';\n\n// const VideoProcessor = () => {\n//   const [inputText, setInputText] = useState('');\n//   const [videoUrl, setVideoUrl] = useState('');\n//   const [processedVideoUrl, setProcessedVideoUrl] = useState('');\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const handleTextSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n//     setError('');\n//     setVideoUrl('');\n//     setProcessedVideoUrl('');\n\n//     try {\n//       const response = await axios.post('http://localhost:8000/process_text', { text: inputText });\n//       const fullVideoUrl = `http://localhost:8000${response.data.video_url}`;\n//       setVideoUrl(fullVideoUrl);\n//       console.log(\"Received video URL:\", fullVideoUrl);\n//     } catch (err) {\n//       setError(`Error processing text: ${err.response?.data?.detail || err.message}`);\n//       console.error(err);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const handleVideoProcess = async () => {\n//     setIsLoading(true);\n//     setError('');\n//     setProcessedVideoUrl('');\n\n//     try {\n//       const response = await axios.post('http://localhost:8000/process_video');\n//       const fullVideoUrl = `http://localhost:8000${response.data.video_url}`;\n//       setProcessedVideoUrl(fullVideoUrl);\n//       console.log(\"Received processed video URL:\", fullVideoUrl);\n//     } catch (err) {\n//       setError(`Error processing video: ${err.response?.data?.detail || err.message}`);\n//       console.error(err);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mx-auto p-4\">\n//       <form onSubmit={handleTextSubmit} className=\"mb-4\">\n//         <input\n//           type=\"text\"\n//           value={inputText}\n//           onChange={(e) => setInputText(e.target.value)}\n//           placeholder=\"Enter text to process\"\n//           className=\"w-full p-2 border rounded\"\n//         />\n//         <button \n//           type=\"submit\" \n//           disabled={isLoading}\n//           className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n//         >\n//           {isLoading ? 'Processing...' : 'Process Text'}\n//         </button>\n//       </form>\n\n//       {error && <p className=\"text-red-500\">{error}</p>}\n\n//       {videoUrl && (\n//         <div className=\"mt-4\">\n//           <p>Original Video:</p>\n//           <ReactPlayer \n//             url={videoUrl} \n//             controls={true} \n//             width=\"100%\"\n//             height=\"auto\"\n//             onError={(e) => {\n//               console.error(\"Video playback error:\", e);\n//               setError(`Failed to load video. Please check the URL and ensure the video file exists. Error: ${e.message}`);\n//             }}\n//           />\n//           <button \n//             onClick={handleVideoProcess}\n//             disabled={isLoading}\n//             className=\"mt-2 px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600\"\n//           >\n//             {isLoading ? 'Processing...' : 'Process Video'}\n//           </button>\n//         </div>\n//       )}\n\n//       {processedVideoUrl && (\n//         <div className=\"mt-4\">\n//           <p>Processed Video:</p>\n//           <ReactPlayer \n//             url={processedVideoUrl} \n//             controls={true} \n//             width=\"100%\"\n//             height=\"auto\"\n//             onError={(e) => {\n//               console.error(\"Processed video playback error:\", e);\n//               setError(`Failed to load processed video. Please check the URL and ensure the video file exists. Error: ${e.message}`);\n//             }}\n//           />\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default VideoProcessor;\n\n\n\n\n\n\n\n\n\n// simple with one functionalities\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import ReactPlayer from 'react-player';\n\n// const VideoProcessor = () => {\n//   const [inputText, setInputText] = useState('');\n//   const [videoUrl, setVideoUrl] = useState('');\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n//     setError('');\n//     setVideoUrl('');\n\n//     try {\n//       const response = await axios.post('http://localhost:8000/process_text', { text: inputText });\n//       const fullVideoUrl = `http://localhost:8000${response.data.video_url}`;\n//       setVideoUrl(fullVideoUrl);\n//       console.log(\"Received video URL:\", fullVideoUrl);\n//     } catch (err) {\n//       setError(`Error processing video: ${err.response?.data?.detail || err.message}`);\n//       console.error(err);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mx-auto p-4\">\n//       <form onSubmit={handleSubmit} className=\"mb-4\">\n//         <input\n//           type=\"text\"\n//           value={inputText}\n//           onChange={(e) => setInputText(e.target.value)}\n//           placeholder=\"Enter text to process\"\n//           className=\"w-full p-2 border rounded\"\n//         />\n//         <button \n//           type=\"submit\" \n//           disabled={isLoading}\n//           className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n//         >\n//           {isLoading ? 'Processing...' : 'Process'}\n//         </button>\n//       </form>\n\n//       {error && <p className=\"text-red-500\">{error}</p>}\n\n//       {videoUrl && (\n//         <div className=\"mt-4\">\n//           <p>Video URL: {videoUrl}</p>\n//           <ReactPlayer \n//             url={videoUrl} \n//             controls={true} \n//             width=\"100%\"\n//             height=\"auto\"\n//             onError={(e) => {\n//               console.error(\"Video playback error:\", e);\n//               setError(`Failed to load video. Please check the URL and ensure the video file exists. Error: ${e.message}`);\n//             }}\n//           />\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default VideoProcessor;"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAUA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}